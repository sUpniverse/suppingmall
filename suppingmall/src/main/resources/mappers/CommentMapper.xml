<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.supshop.suppingmall.mapper.CommentMapper">
    <resultMap id="Comment" type="com.supshop.suppingmall.comment.Comment" autoMapping="true">
        <id property="commentId" column="CommentId" />
        <result property="level" column="CommentLevel" />
        <result property="title" column="CommentTitle" />
        <result property="contents" column="CommentContents" />
        <result property="delYn" column="CommentDelYn" />
        <result property="createdDate" column="CommentCreatedDate" />
        <result property="updatedDate" column="CommentUpdatedDate" />
        <association property="creator" javaType="com.supshop.suppingmall.user.User">
            <id property="userId" column="UserId" />
            <result property="email" column="UserEmail" />
            <result property="nickName" column="UserNickName" />
            <result property="createdDate" column="UserCreatedDate" />
            <result property="role" column="UserRole" typeHandler="com.supshop.suppingmall.user.RoleTypeHandler" />
        </association>
        <association property="board" javaType="com.supshop.suppingmall.board.Board">
            <id property="boardId" column="BoardId" />
            <result property="title" column="BoardTitle" />
            <result property="contents" column="BoardContents" />
            <result property="hit" column="BoardHit" />
            <result property="delYn" column="BoardDelYn" />
            <result property="createdDate" column="BoardCreatedDate" />
            <result property="updatedDate" column="BoardUpdatedDate" />
            <association property="category" javaType="com.supshop.suppingmall.category.Category">
                <id property="id" column="CategoryId" />
                <result property="name" column="CategoryName" />
            </association>
        </association>
    </resultMap>

    <sql id="paging">
        <if test="criteria != null">
            limit #{criteria.pageStart}, #{criteria.perPageNum}
        </if>
    </sql>


    <sql id="conditionalSearch">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="boardId != null">
                AND C.board_id = #{boardId}
            </if>
            <if test="type != null and searchValue != null">
                <if test='type.equals("creator")'>
                    AND U.nickname = #{searchValue}
                </if>
            </if>
        </trim>
    </sql>

    <select id="findCommentCount" resultType="int">
        SELECT count(*)
        From Comment AS C
        LEFT OUTER JOIN User AS U on (C.user_id = U.user_id)
        <include refid="conditionalSearch"></include>
    </select>

    <select id="findAll" resultMap="Comment">
        SELECT C.comment_id AS "CommentId", C.title AS "CommentTitle", C.contents AS "CommentContents", C.level AS "CommentLevel",
        C.created_date AS "CommentCreatedDate", C.updated_date AS "CommentUpdatedDate", U.user_id AS "UserId",
        U.email AS "UserEmail", U.nickname AS "UserNickName", U.created_date AS "UserCreatedDate", U.role AS "UserRole",
        B.board_id AS "BoardId", B.title AS "BoardTitle", B.contents AS "BoardContents", B.hit AS "BoardHit",
        B.created_date AS "BoardCreatedDate", B.updated_date AS "BoardUpdatedDate", CA.name AS "CategoryName"
        FROM Comment AS C
        LEFT OUTER JOIN User AS U on (C.user_id = U.user_id)
        LEFT OUTER JOIN Board AS B on (C.board_id = B.board_id)
        LEFT OUTER JOIN Category AS CA on (B.category_id = CA.category_id)
        <include refid="conditionalSearch"></include>
        ORDER BY C.comment_id asc
        <include refid="paging"></include>
    </select>

    <select id="findOne" resultMap="Comment">
        SELECT C.comment_id AS "CommentId", B.title AS "CommentTitle", B.contents AS "CommentContents",
        B.created_date AS "CommentCreatedDate", B.updated_date AS "CommentUpdatedDate", U.user_id AS "UserId",
        U.email AS "UserEmail", U.nickname AS "UserNickName", U.created_date AS "UserCreatedDate", U.role AS "UserRole",
        C.category_id AS "CategoryId", C.name AS "CategoryName"
        FROM Comment AS B
        LEFT OUTER JOIN User AS U on (B.user_id = U.user_id)
        LEFT OUTER JOIN category AS C on (B.category_id = C.category_id)
        WHERE C.comment_id = #{id};
    </select>

    <insert id="insertComment" parameterType="com.supshop.suppingmall.comment.Comment" useGeneratedKeys="true" keyProperty="commentId">
        INSERT INTO Comment (
        board_id,
        title,
        level,
        contents,
        user_id,
        created_date,
        updated_date
        )
        VALUES (
        #{board.boardId},
        #{title},
        #{level},
        #{contents},
        #{creator.userId},
        now(),
        now()
        )
    </insert>

    <update id="updateComment" parameterType="com.supshop.suppingmall.comment.Comment">
        UPDATE Comment
        SET
        title = #{comment.title},
        contents = #{comment.contents},
        updated_date = now()
        WHERE comment_id = #{id};
    </update>

    <delete id="deleteComment" parameterType="com.supshop.suppingmall.comment.Comment">
        DELETE FROM comment
        WHERE comment_id = #{id};
    </delete>
</mapper>

