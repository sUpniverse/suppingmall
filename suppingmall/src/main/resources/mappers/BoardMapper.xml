<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.supshop.suppingmall.mapper.BoardMapper">
    <resultMap id="Board" type="com.supshop.suppingmall.board.Board" autoMapping="true">
        <id property="boardId" column="BoardId" />
        <result property="title" column="BoardTitle" />
        <result property="contents" column="BoardContents" />
        <result property="hit" column="BoardHit" />
        <result property="delYn" column="BoardDelYn" />
        <result property="createdDate" column="BoardCreatedDate" />
        <result property="updatedDate" column="BoardUpdatedDate" />
        <association property="creator" javaType="com.supshop.suppingmall.user.UserVO">
            <id property="userId" column="UserId" />
            <result property="email" column="UserEmail" />
            <result property="nickName" column="UserNickName" />
            <result property="createdDate" column="UserCreatedDate" />
            <result property="role" column="UserRole" typeHandler="com.supshop.suppingmall.user.RoleTypeHandler" />
        </association>
        <association property="category" javaType="com.supshop.suppingmall.category.Category">
            <id property="id" column="CategoryId" />
            <result property="name" column="CategoryName" />
        </association>
        <collection property="comments" ofType="com.supshop.suppingmall.comment.Comment">
            <id property="commentId" column="CommentId" />
        </collection>
    </resultMap>

    <select id="selectAllBoard" resultMap="Board">
        SELECT distinct B.board_id AS "BoardId", B.title AS "BoardTitle", B.contents AS "BoardContents", B.hit AS "BoardHit",
        B.created_date AS "BoardCreatedDate", B.updated_date AS "BoardUpdatedDate", U.user_id AS "UserId",
        U.email AS "UserEmail", U.nickname AS "UserNickName", U.created_date AS "UserCreatedDate", U.role AS "UserRole",
        C.category_id AS "CategoryId", C.name AS "CategoryName"
        FROM Board AS B
        LEFT OUTER JOIN category AS C on (B.category_id = C.category_id)
        LEFT OUTER JOIN User AS U on (B.user_id = U.user_id)
        ORDER BY B.board_id desc
    </select>

    <select id="selectBoardByCondition" resultMap="Board">
        SELECT B.board_id AS "BoardId", B.title AS "BoardTitle", B.contents AS "BoardContents", B.hit AS "BoardHit",
        B.created_date AS "BoardCreatedDate", B.updated_date AS "BoardUpdatedDate", U.user_id AS "UserId",
        U.email AS "UserEmail", U.nickname AS "UserNickName", U.created_date AS "UserCreatedDate", U.role AS "UserRole",
        C.category_id AS "CategoryId", C.name AS "CategoryName"
        FROM Board AS B
        LEFT OUTER JOIN category AS C on (B.category_id = C.category_id)
        LEFT OUTER JOIN User AS U on (B.user_id = U.user_id)
        <include refid="conditionalSearch"></include>
        ORDER BY B.board_id desc
        limit #{boardCriteria.pageStart}, #{boardCriteria.perPageNum}
    </select>

    <sql id="conditionalSearch">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="type != null and searchValue != null">
                <if test='type.equals("title")'>
                    <bind name="searchValue" value="'%'+searchValue+'%'"/>
                    AND B.title LIKE #{searchValue}
                </if>
                <if test='type.equals("contents")'>
                    <bind name="searchValue" value="'%'+searchValue+'%'"/>
                    AND B.contents LIKE #{searchValue}
                </if>
                <if test='type.equals("creator")'>
                    AND U.nickName = #{searchValue}
                </if>
            </if>
        </trim>
    </sql>

    <select id="selectBoard" resultMap="Board">
        SELECT B.board_id AS "BoardId", B.title AS "BoardTitle", B.contents AS "BoardContents", B.hit AS "BoardHit",
        B.created_date AS "BoardCreatedDate", B.updated_date AS "BoardUpdatedDate", U.user_id AS "UserId",
        U.email AS "UserEmail", U.nickname AS "UserNickName", U.created_date AS "UserCreatedDate", U.role AS "UserRole",
        C.category_id AS "CategoryId", C.name AS "CategoryName"
        FROM Board AS B
        LEFT OUTER JOIN User AS U on (B.user_id = U.user_id)
        LEFT OUTER JOIN category AS C on (B.category_id = C.category_id)
        WHERE B.board_id = #{id}
    </select>

    <select id="selectBoardCount" resultType="int">
        SELECT count(board_id)
        From Board
        WHERE board_id > 0
    </select>

    <select id="findBoardsByProductId" resultMap="Board">
        SELECT B.board_id AS "BoardId", B.title AS "BoardTitle", B.contents AS "BoardContents", B.hit AS "BoardHit",
        B.created_date AS "BoardCreatedDate", B.updated_date AS "BoardUpdatedDate", U.user_id AS "UserId",
        U.email AS "UserEmail", U.nickname AS "UserNickName", U.created_date AS "UserCreatedDate", U.role AS "UserRole",
        C.category_id AS "CategoryId", C.name AS "CategoryName"
        FROM Board AS B
        LEFT OUTER JOIN User AS U on (B.user_id = U.user_id)
        LEFT OUTER JOIN category AS C on (B.category_id = C.category_id)
        WHERE B.product_id = #{productId} AND B.category_id = #{categoryId}
    </select>


    <insert id="insertBoard" parameterType="com.supshop.suppingmall.board.Board" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO Board (
        title,
        contents,
        user_id,
        hit,
        category_id,
        product_id,
        created_date,
        updated_date
        )
        VALUES (
        #{title},
        #{contents},
        #{creator.userId},
        0,
        #{category.id},
        #{product.productId},
        now(),
        now()
        )
    </insert>

    <update id="updateBoard" parameterType="com.supshop.suppingmall.board.Board">
        UPDATE Board
        SET
        title = #{board.title},
        contents = #{board.contents},
        updated_date = now()
        WHERE board_id = #{id};
    </update>

    <delete id="deleteBoard" parameterType="com.supshop.suppingmall.board.Board">
        DELETE FROM Board
        WHERE board_id = #{id};
    </delete>

    <update id="updateBoardHit" parameterType="com.supshop.suppingmall.board.Board">
        UPDATE board
        SET
        hit = hit +1
        WHERE board_id = #{id};
    </update>
</mapper>

