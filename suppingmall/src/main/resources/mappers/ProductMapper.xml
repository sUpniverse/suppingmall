<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.supshop.suppingmall.mapper.ProductMapper">
    <resultMap id="product" type="com.supshop.suppingmall.product.Product" autoMapping="true">
        <id property="productId" column="ProductId" />
        <result property="name" column="ProductName" />
        <result property="price" column="ProductPrice" />
        <result property="registeredDate" column="ProductRegisteredDate" />
        <result property="status" column="ProductStatus" typeHandler="com.supshop.suppingmall.product.ProductStatusTypeHandler" />
        <result property="thumbnail" column="ProductThumbnail" />
        <result property="picture" column="ProductPicture" />
        <result property="rating" column="ProductRating" />
        <result property="contents" column="ProductContents" />
        <result property="deliveryPrice" column="ProductDeliveryPrice" />
        <result property="deliveryVendor" column="ProductDeliveryVendor" typeHandler="com.supshop.suppingmall.delivery.DeliveryVendorHandler"/>
        <association property="detail" column="ProductId" javaType="com.supshop.suppingmall.product.ProductDetail">
            <id property="detailId" column="ProductDetailId" />
            <result property="asNumber" column="ProductAsNumber"/>
            <result property="manuplatedDate" column="ProductManuplatedDate"/>
            <result property="manufacturer" column="ProductManufacturer"/>
            <result property="origin" column="ProductOrigin"/>
            <result property="spec1" column="ProductSpec1" />
            <result property="spec2" column="ProductSpec2" />
            <result property="spec3" column="ProductSpec3" />
            <result property="spec4" column="ProductSpec4" />
            <result property="spec5" column="ProductSpec5" />
            <result property="spec6" column="ProductSpec6" />
        </association>
        <association property="seller" javaType="com.supshop.suppingmall.user.User">
            <id property="userId" column="UserId" />
            <association property="storeVO" javaType="com.supshop.suppingmall.user.StoreVO">
                <result property="storeName" column="StoreName" />
                <result property="storePhoneNumber" column="StorePhoneNumber" />
                <result property="storeZipCode" column="StoreZipCode" />
                <result property="storeAddress" column="StoreAddress" />
                <result property="storeAddressDetail" column="StoreAddressDetail" />
            </association>
        </association>
        <association property="category" javaType="com.supshop.suppingmall.category.Category">
            <id property="id" column="CategoryId" />
            <result property="name" column="CategoryName" />
        </association>
        <collection property="options" column="ProductId" ofType="com.supshop.suppingmall.product.ProductOption" >
            <id property="optionId" column="ProductOptionId" />
            <result property="optionName" column="ProductOptionName" />
            <result property="price" column="ProductOptionPrice" />
            <result property="quantity" column="ProductOptionQuantity" />
        </collection>
    </resultMap>

    <select id="findAll" resultMap="product">
        SELECT P.product_id AS "ProductId", P.name AS "ProductName", P.price AS "ProductPrice",
        P.registered_date AS "ProductRegisteredDate", P.seller_id AS "ProductSellerId", P.category_id AS "ProductCategory",
        P.thumbnail AS "ProductThumbnail", P.picture AS "ProductPicture", P.rating AS "ProductRating",
        PD.product_detail_id AS "ProductDetailId", PD.as_number AS "ProductAsNumber", PD.manuplated_date AS "PrdouctManuplatedDate",
        PD.contry_of_origin AS "ProductOrigin", PD.manufacturer AS "ProductManufacturer", PD.spec_1 AS "ProductSpec1",
        PD.spec_2 AS "ProductSpec2",PD.spec_3 AS "ProductSpec3", PD.spec_4 AS "ProductSpec4", PD.spec_5 AS "ProductSpec5",
        PO.product_option_id AS "ProductOptionId", PO.name AS "ProductOptionName", PO.quantity AS "ProductOptionQuantity",
        C.category_id AS "CategoryId", C.name AS "CategoryName"
        FROM Product AS P
        LEFT OUTER JOIN Product_Detail AS PD on (P.product_id = PD.product_id)
        LEFT OUTER JOIN Product_Option AS PO on (P.product_id = PO.product_id)
        LEFT OUTER JOIN category AS C on (p.category_id = C.category_id)
        <include refid="conditionalSearch"></include>
        ORDER BY P.product_id ASC, PO.product_option_id ASC
    </select>

    <select id="findOnSaleProducts" resultMap="product">
        SELECT P.product_id AS "ProductId", P.name AS "ProductName", P.price AS "ProductPrice",
        P.registered_date AS "ProductRegisteredDate", P.seller_id AS "ProductSellerId", P.category_id AS "ProductCategory",
        P.thumbnail AS "ProductThumbnail", P.picture AS "ProductPicture", P.rating AS "ProductRating",
        PD.product_detail_id AS "ProductDetailId", PD.as_number AS "ProductAsNumber", PD.manuplated_date AS "PrdouctManuplatedDate",
        PD.contry_of_origin AS "ProductOrigin", PD.manufacturer AS "ProductManufacturer", PD.spec_1 AS "ProductSpec1",
        PD.spec_2 AS "ProductSpec2",PD.spec_3 AS "ProductSpec3", PD.spec_4 AS "ProductSpec4", PD.spec_5 AS "ProductSpec5",
        PO.product_option_id AS "ProductOptionId", PO.name AS "ProductOptionName", PO.quantity AS "ProductOptionQuantity",
        C.category_id AS "CategoryId", C.name AS "CategoryName"
        FROM Product AS P
        LEFT OUTER JOIN Product_Detail AS PD on (P.product_id = PD.product_id)
        LEFT OUTER JOIN Product_Option AS PO on (P.product_id = PO.product_id)
        LEFT OUTER JOIN category AS C on (p.category_id = C.category_id)
        <include refid="conditionalSearch"></include>
        ORDER BY P.product_id ASC, PO.product_option_id ASC
        <include refid="paging"></include>
    </select>


    <sql id="conditionalSearch">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test='id != null'>
                AND P.product_id = #{id}
            </if>
            <if test='category != null'>
                AND P.category_id = #{category.id}
            </if>
            <if test='name != null'>
                <bind name="name" value="'%'+name+'%'"/>
                AND P.name LIKE #{name}
            </if>
            <if test='status != null'>
                AND P.status LIKE #{status, typeHandler=com.supshop.suppingmall.product.ProductStatusTypeHandler}
            </if>
        </trim>
    </sql>

    <sql id="paging">
        <if test="criteria != null">
            limit #{criteria.pageStart}, #{criteria.perPageNum}
        </if>
    </sql>

    <select id="findAllBySellerId" resultMap="product">
        SELECT P.product_id AS "ProductId", P.name AS "ProductName", P.price AS "ProductPrice", P.registered_date AS "ProductRegisteredDate",
        P.seller_id AS "ProductSellerId", P.category_id AS "ProductCategory", P.delivery_price AS "ProductDeliveryPrice", P.delivery_vendor AS "ProductDeliveryVendor",
        P.thumbnail AS "ProductThumbnail", P.picture AS "ProductPicture", P.rating AS "ProductRating", P.status AS "ProductStatus",
        PD.product_detail_id AS "ProductDetailId", PD.as_number AS "ProductAsNumber", PD.manuplated_date AS "PrdouctManuplatedDate",
        PD.contry_of_origin AS "ProductOrigin", PD.manufacturer AS "ProductManufacturer", PD.spec_1 AS "ProductSpec1",
        PD.spec_2 AS "ProductSpec2",PD.spec_3 AS "ProductSpec3", PD.spec_4 AS "ProductSpec4", PD.spec_5 AS "ProductSpec5",
        PO.product_option_id AS "ProductOptionId", PO.name AS "ProductOptionName", PO.quantity AS "ProductOptionQuantity",
        C.category_id AS "CategoryId", C.name AS "CategoryName"
        FROM Product AS P
        LEFT OUTER JOIN Product_Detail AS PD on (P.product_id = PD.product_id)
        LEFT OUTER JOIN Product_Option AS PO on (P.product_id = PO.product_id)
        LEFT OUTER JOIN category AS C on (p.category_id = C.category_id)
        <include refid="conditionalSearchById"></include>
        ORDER BY P.product_id DESC, PO.product_option_id ASC
        <include refid="paging"></include>
    </select>

    <sql id="conditionalSearchById">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="sellerId != null">
                AND P.seller_id = #{sellerId}
            </if>
        </trim>
    </sql>

    <select id="findOne" resultMap="product">
        SELECT P.product_id AS "ProductId", P.name AS "ProductName", P.price AS "ProductPrice", P.registered_date AS "ProductRegisteredDate",
        P.seller_id AS "ProductSellerId", P.category_id AS "ProductCategory", P.delivery_price AS "ProductDeliveryPrice", P.delivery_vendor AS "ProductDeliveryVendor",
        P.thumbnail AS "ProductThumbnail", P.picture AS "ProductPicture", P.rating AS "ProductRating", P.contents AS "ProductContents",
        PD.product_detail_id AS "ProductDetailId", PD.as_number AS "ProductAsNumber", PD.manuplated_date AS "PrdouctManuplatedDate",
        PD.contry_of_origin AS "ProductOrigin", PD.manufacturer AS "ProductManufacturer", PD.spec_1 AS "ProductSpec1",
        PD.spec_2 AS "ProductSpec2",PD.spec_3 AS "ProductSpec3", PD.spec_4 AS "ProductSpec4", PD.spec_5 AS "ProductSpec5",
        PO.product_option_id AS "ProductOptionId", PO.name AS "ProductOptionName", PO.quantity AS "ProductOptionQuantity", PO.price AS "ProductOptionPrice",
        U.user_id AS "UserId", U.store_name AS "StoreName", U.store_phone_number AS "StorePhoneNumber", U.zipcode AS "StoreZipCode",
        U.store_address AS "StoreAddress", U.store_address_detail AS "StoreAddressDetail", C.category_id AS "CategoryId", C.name AS "CategoryName"
        FROM Product AS P
        LEFT OUTER JOIN Product_Detail AS PD on (P.product_id = PD.product_id)
        LEFT OUTER JOIN Product_Option AS PO on (P.product_id = PO.product_id)
        LEFT OUTER JOIN user AS U on (P.seller_id = U.user_id)
        LEFT OUTER JOIN category AS C on (P.category_id = C.category_id)
        WHERE P.product_id = #{id}
        ORDER BY P.product_id, PO.product_option_id ASC
    </select>

    <!--  판매량이 가장 높은 순으로 검색  -->
    <select id="findProductByOrderCount" resultMap="product">
        SELECT P.product_id AS "ProductId", P.name AS "ProductName", P.price AS "ProductPrice", P.registered_date AS "ProductRegisteredDate",
        P.seller_id AS "ProductSellerId", P.category_id AS "ProductCategory", P.delivery_price AS "ProductDeliveryPrice", P.delivery_vendor AS "ProductDeliveryVendor",
        P.thumbnail AS "ProductThumbnail", P.picture AS "ProductPicture", P.rating AS "ProductRating", P.status AS "ProductStatus",
        PD.product_detail_id AS "ProductDetailId", PD.as_number AS "ProductAsNumber", PD.manuplated_date AS "PrdouctManuplatedDate",
        PD.contry_of_origin AS "ProductOrigin", PD.manufacturer AS "ProductManufacturer", PD.spec_1 AS "ProductSpec1",
        PD.spec_2 AS "ProductSpec2",PD.spec_3 AS "ProductSpec3", PD.spec_4 AS "ProductSpec4", PD.spec_5 AS "ProductSpec5",
        PO.product_option_id AS "ProductOptionId", PO.name AS "ProductOptionName", PO.quantity AS "ProductOptionQuantity",
        C.category_id AS "CategoryId", C.name AS "CategoryName"
        FROM Product AS P
        LEFT OUTER JOIN Product_Detail AS PD on (P.product_id = PD.product_id)
        LEFT OUTER JOIN Product_Option AS PO on (P.product_id = PO.product_id)
        LEFT OUTER JOIN category AS C on (p.category_id = C.category_id)
		Where P.product_id IN (SELECT product_id  from orderItem group by product_id order by count(product_id) desc)
    </select>


    <insert id="insertProduct" parameterType="com.supshop.suppingmall.product.Product" useGeneratedKeys="true" keyProperty="productId" keyColumn="product_id">
        INSERT INTO Product(
        name,
        price,
        delivery_price,
        delivery_vendor,
        registered_date,
        seller_id,
        category_id,
        status,
        thumbnail,
        picture,
        rating,
        contents
        )
        VALUES (
        #{name},
        #{price},
        #{deliveryPrice},
        #{deliveryVendor, typeHandler=com.supshop.suppingmall.delivery.DeliveryVendorHandler},
        now(),
        #{seller.userId},
        #{category.id},
        'PS00',
        #{thumbnail},
        #{picture},
        #{rating},
        #{contents}
        );
    </insert>

    <insert id="addProductOptions" parameterType="java.util.List">
        <if test="list != null and list.size > 0">
                INSERT INTO product_option(
                product_id,
                product_option_id,
                name,
                price,
                quantity)
                VALUES
            <foreach collection="list" item="option" separator=",">
                (
                #{option.productId},
                #{option.optionId},
                #{option.optionName},
                #{option.price},
                #{option.quantity}
                )
            </foreach>
        </if>
    </insert>

    <insert id="addProductDetail" parameterType="com.supshop.suppingmall.product.ProductDetail">
            INSERT INTO Product_Detail(
            product_id,
            product_detail_id,
            as_number,
            manuplated_date,
            manufacturer,
            contry_of_origin
            )
            VALUES (
            #{productId},
            1,
            #{asNumber},
            #{manuplatedDate},
            #{manufacturer},
            #{origin}
            );
    </insert>

    <update id="updateProduct" parameterType="com.supshop.suppingmall.product.Product">
        UPDATE Product
        SET
        name = #{product.name},
        price = #{product.price},
        delivery_price = #{product.deliveryPrice},
        delivery_vendor = #{product.deliveryVendor, typeHandler=com.supshop.suppingmall.delivery.DeliveryVendorHandler},
        seller_id = #{product.seller.userId},
        category_id = #{product.category.id},
        status = #{product.status, typeHandler=com.supshop.suppingmall.product.ProductStatusTypeHandler},
        thumbnail = #{product.thumbnail},
        picture = #{product.picture},
        rating = #{product.rating},
        contents = #{product.contents}
        where
        product_id = #{productId};
    </update>

    <update id="updateProductOption" parameterType="java.util.List">
        <foreach item="productOption" index="index" collection="list">
        UPDATE product_option
        SET
        name = #{productOption.optionName},
        price = #{productOption.price},
        quantity = #{productOption.quantity}
        where
        product_id = #{productOption.productId} AND product_option_id = #{productOption.optionId};
        </foreach>
    </update>


    <update id="deleteProduct" parameterType="com.supshop.suppingmall.product.Product">
        UPDATE Product
        SET
        status = 'PS04',
        WHERE product_id = #{id}
    </update>




</mapper>
